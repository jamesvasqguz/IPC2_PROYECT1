package UI.Recepcionista;
//Importamos las clases y las utilidades que usaremos en la actulizacion del usuario

import java.sql.*;
import Class.ConectorDB;
import java.awt.event.ItemEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jara
 */
public class jFEntregarPaquete extends javax.swing.JFrame {

//Atributos que declaramos globales para poder ser usados en los distintos metodos   
    String user;
    DefaultTableModel model = new DefaultTableModel();
    Connection cn = ConectorDB.conexion();

    /**
     * Constructor
     */
    public jFEntregarPaquete() {
        initComponents();
        setSize(650, 500);
        setResizable(false);
        setTitle("Gestionar Cliente");
        setLocationRelativeTo(null);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        agregarPaquete();                                                       //Llamamos al metodo que agregamos al iniciar el form ya que necesitamos que los cargue sin perder tanto tiempo
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cmbPaquete = new javax.swing.JComboBox<>();
        cmbNit = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnEntregarPaquete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Nimbus Sans Narrow", 3, 24)); // NOI18N
        jLabel1.setText("Entregar Paquete");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(200, 10, 330, 40);

        jPanel1.add(cmbPaquete);
        cmbPaquete.setBounds(50, 90, 250, 32);

        cmbNit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbNitItemStateChanged(evt);
            }
        });
        jPanel1.add(cmbNit);
        cmbNit.setBounds(50, 200, 250, 32);

        jLabel2.setText("Seleccione ID del Paquete:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(50, 65, 190, 20);

        jLabel3.setText("Seleccione el NIT del Cliente que envia:");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(50, 175, 250, 20);

        btnEntregarPaquete.setText("Entregar Paquete");
        btnEntregarPaquete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntregarPaqueteActionPerformed(evt);
            }
        });
        jPanel1.add(btnEntregarPaquete);
        btnEntregarPaquete.setBounds(230, 330, 140, 70);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 650, 500);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbNitItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbNitItemStateChanged

    }//GEN-LAST:event_cmbNitItemStateChanged
//Este boton llama al metodo que entrega al paquete
    private void btnEntregarPaqueteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntregarPaqueteActionPerformed
    entregarPaquete();
    }//GEN-LAST:event_btnEntregarPaqueteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEntregarPaquete;
    private javax.swing.JComboBox<String> cmbNit;
    private javax.swing.JComboBox<String> cmbPaquete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
//Este metodo guarda en un ArrayList los ID del paquete que ya llegaron a su destino y agregarlos al ComboBox
    public void agregarPaquete() {
        ArrayList<String> list = new ArrayList<>();
        try {
            PreparedStatement ps = cn.prepareStatement("SELECT id_paquete, localizacion, destino FROM Paquete WHERE destino=localizacion AND estado_paquete='No entregado'");
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                String IdPaquete = String.valueOf(rs.getInt("id_paquete"));
                list.add(IdPaquete);
            }
            if (list.isEmpty()) {
                cmbPaquete.addItem("No hay paquetes");
            }
            for (int i = 0; i < list.size(); i++) {
                cmbPaquete.addItem(list.get(i));
            }
        } catch (SQLException e) {
            System.err.println("Error en la conexion de DB con Paquete" + e);
        }
        agregarNit();
    }
//Este metodo guarda en un ArrayList los Nit's que le pertenecen a los paquetes en el ComboBox
    public void agregarNit(){
        ArrayList<String> list2 = new ArrayList<>();
        String idPaquete = cmbPaquete.getSelectedItem().toString();
        try {
            PreparedStatement ps1 = cn.prepareStatement("SELECT nit_cliente FROM Paquete WHERE id_paquete='"+idPaquete+"'");
            ResultSet rs1 = ps1.executeQuery();
            while (rs1.next()) {
                String nitC = rs1.getString("nit_cliente");
                list2.add(nitC);
            }
            if (list2.isEmpty()) {

                cmbNit.addItem("No hay nit");
            }
            for (int i = 0; i < list2.size(); i++) {
                cmbNit.addItem(list2.get(i));
            }
        } catch (SQLException e) {
            System.err.println("Error en la conexion de DB con Cliente" + e);
        }
    }
//Este metodo tiene la tarea de entregar el paquete
    public void entregarPaquete(){
        try {
            PreparedStatement ps2 = cn.prepareStatement("UPDATE Paquete SET estado_paquete='Entregado' WHERE id_paquete='"+cmbPaquete.getSelectedItem().toString()+"' AND destino=localizacion");     
            ps2.executeUpdate();
            JOptionPane.showMessageDialog(null, "Paquete Entregado");
        } catch (SQLException e) {
             System.err.println("Error en la conexion de DB con UPDATE" + e);
        }
    }
}
