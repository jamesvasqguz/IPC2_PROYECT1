package UI;

import java.sql.*;
import Class.ConectorDB;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;

/**
 *
 * @author jara
 */
public class jFCheckpoints extends javax.swing.JFrame {

    String user;
    Connection cn = ConectorDB.conexion();
    int precio,cmb_estado = 0, id, numOpe;
    String ruta, ope, cmb_Estado = "";

    /**
     * Creates new form jFCheckpoints
     */
    public jFCheckpoints() {
        initComponents();
        setTitle("Registrar Usuario");
        setSize(650, 500);
        setResizable(false);
        setLocationRelativeTo(null);
        user = FromPrincipal.user;
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        createCheckpoint();
        rutas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbRuta = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cmbOperador = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cmbEstadoControl = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtPrecioHora = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtNombrePC = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Bitstream Vera Sans", 3, 24)); // NOI18N
        jLabel1.setText("Nuevo Punto de Control");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(120, 10, 370, 40);

        jLabel2.setText("Seleccione Ruta a la cual pertenece:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(30, 70, 240, 15);

        jPanel1.add(cmbRuta);
        cmbRuta.setBounds(30, 90, 220, 32);

        jLabel3.setText("Seleccione Operador");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(30, 160, 140, 15);

        jPanel1.add(cmbOperador);
        cmbOperador.setBounds(30, 180, 220, 32);

        jLabel4.setText("Estado del Punto de Control");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(350, 70, 180, 15);

        cmbEstadoControl.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Inactivo" }));
        jPanel1.add(cmbEstadoControl);
        cmbEstadoControl.setBounds(350, 90, 102, 32);

        jLabel5.setText("Precio x Hora:");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(350, 160, 100, 15);
        jPanel1.add(txtPrecioHora);
        txtPrecioHora.setBounds(350, 180, 190, 32);

        jButton1.setText("Crear Punto de Control");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(210, 350, 190, 80);

        jLabel6.setText("Nombre del Punto Control");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(240, 240, 190, 15);
        jPanel1.add(txtNombrePC);
        txtNombrePC.setBounds(130, 260, 380, 32);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 660, 490);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        combo();
        ruta = cmbRuta.getSelectedItem().toString();
        ope = cmbOperador.getSelectedItem().toString();
        precio = Integer.parseInt(txtPrecioHora.getText().trim());
        System.out.println(ruta);
        System.out.println(ope);
        try {
            PreparedStatement ps = cn.prepareStatement("SELECT id_rutas FROM Rutas WHERE nombre_ruta = '" + ruta + "'");
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
            id = rs.getInt("id_rutas");
            System.out.println(id);
            }
            PreparedStatement ps1 = cn.prepareStatement("SELECT id_usuario FROM Usuario WHERE nombre_usuario='" + ope + "'");
            ResultSet rs1 = ps1.executeQuery();
            if(rs1.next()){
            numOpe = rs1.getInt("id_usuario");
            System.out.println(numOpe);
            }
            PreparedStatement ps2 = cn.prepareStatement("INSERT INTO PuntoControl VALUES(?,?,?,?,?)");
            ps2.setInt(1, 0);
            ps2.setInt(2, id);
            ps2.setInt(3, numOpe);
            ps2.setString(4, cmb_Estado);
            ps2.setInt(5, precio);
            ps2.executeUpdate();
            cn.close();
            txtPrecioHora.setBackground(Color.green);
            JOptionPane.showMessageDialog(null, "Punto de control creado y asignado exitosamente!");
            this.dispose();
        } catch (SQLException e) {
            System.err.println("Error al crear nuevo punto de control." + e);
              JOptionPane.showMessageDialog(null, "Error al registrar punto de control!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbEstadoControl;
    private javax.swing.JComboBox<String> cmbOperador;
    private javax.swing.JComboBox<String> cmbRuta;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtNombrePC;
    private javax.swing.JTextField txtPrecioHora;
    // End of variables declaration//GEN-END:variables

    public void createCheckpoint() {
        try {
            operarios();
            ArrayList<String> list = new ArrayList<String>();
            list = operarios();
            for (int i = 0; i < list.size(); i++) {
                cmbOperador.addItem(list.get(i));
            }
        } catch (Exception e) {
        }
    }

    public ArrayList<String> operarios() {
        ArrayList<String> list = new ArrayList<String>();
        String dato = "SELECT tipo_nivel, nombre_usuario FROM Usuario";
        try {
            PreparedStatement ps1 = cn.prepareStatement(dato);
            ResultSet rs = ps1.executeQuery();
            while (rs.next()) {
                if (rs.getString("tipo_nivel").equals("Operador")) {
                    list.add(rs.getString("nombre_usuario"));
                }
            }
        } catch (SQLException e) {
            System.err.println("Error al conectar DB con Usuario");
        }
        return list;
    }

    public void rutas() {
        try {
            arrayRuta();
            ArrayList<String> list1 = new ArrayList<String>();
            list1 = arrayRuta();
            for (int i = 0; i < list1.size(); i++) {
                cmbRuta.addItem(list1.get(i));
            }
        } catch (Exception e) {
        }
    }
    public ArrayList<String> arrayRuta() {
        ArrayList<String> list1 = new ArrayList<String>();
        String dato1 = "SELECT nombre_ruta FROM Rutas";
        try {
            PreparedStatement ps2 = cn.prepareStatement(dato1);
            ResultSet rs1 = ps2.executeQuery();
            while (rs1.next()) {
                list1.add(rs1.getString("nombre_ruta"));
            }
        } catch (SQLException e) {
            System.err.println("Error al conectar DB con ruta");
        }
        return list1;
    }

    public void combo() {
        cmb_estado = cmbEstadoControl.getSelectedIndex() + 1;
        if (cmb_estado == 1) {
            cmb_Estado = "Activo";
        } else if (cmb_estado == 2) {
            cmb_Estado = "Inactivo";
        }
    }
}
