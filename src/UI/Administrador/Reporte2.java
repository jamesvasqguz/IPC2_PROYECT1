/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.Administrador;

import Class.ConectorDB;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jara
 */
public class Reporte2 extends javax.swing.JFrame {

    DefaultTableModel model = new DefaultTableModel();
    Connection cn = ConectorDB.conexion();

    /**
     * Creates new form Reporte2
     */
    public Reporte2() {
        initComponents();
        setSize(800, 500);
        setResizable(false);
        setTitle("Reporte de Ganancias");
        setLocationRelativeTo(null);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        rutas();
        tablePaquete = new JTable(model);
        jScrollPane1.setViewportView(tablePaquete);
        model.addColumn("Ruta");
        model.addColumn("Costo");
        model.addColumn("Ingreso");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cmbRuta = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePaquete = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtGanancia = new javax.swing.JTextField();
        btnVer = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Bitstream Vera Sans", 3, 18)); // NOI18N
        jLabel1.setText("Seleccione la Ruta que desea ver:");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(130, 10, 400, 50);

        jPanel1.add(cmbRuta);
        cmbRuta.setBounds(130, 60, 350, 32);

        tablePaquete.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablePaquete);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(12, 100, 670, 270);

        jLabel2.setText("Ganancia:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(70, 390, 120, 30);
        jPanel1.add(txtGanancia);
        txtGanancia.setBounds(170, 390, 230, 32);

        btnVer.setText("Ver");
        btnVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerActionPerformed(evt);
            }
        });
        jPanel1.add(btnVer);
        btnVer.setBounds(510, 60, 70, 30);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 700, 500);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerActionPerformed
        tableGanancias();
        tablePaquete.removeAll();
        
    }//GEN-LAST:event_btnVerActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnVer;
    private javax.swing.JComboBox<String> cmbRuta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablePaquete;
    private javax.swing.JTextField txtGanancia;
    // End of variables declaration//GEN-END:variables
public void tableGanancias() {    
    tablePaquete.removeAll();
        float ganancia, costoT = 0, precioT = 0;
        try {
            PreparedStatement ps = cn.prepareStatement(
                    "SELECT ruta, costo, precio FROM Paquete WHERE destino=localizacion AND ruta='" + cmbRuta.getSelectedItem().toString().trim() + "'");
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                Object[] ob = new Object[3];
                for (int i = 0; i < ob.length; i++) {
                    ob[i] = rs.getObject(i + 1);
                    System.out.println(i);
                }
                model.addRow(ob);
            }
            ganancia = precioT - costoT;
            txtGanancia.setText(String.valueOf(ganancia));
        } catch (SQLException e) {
            System.err.println("Error al rellenar la tabla");
            JOptionPane.showMessageDialog(null, "Error en la conexion DB con la Tabla");
        }
        try {
            PreparedStatement ps1 = cn.prepareStatement("SELECT SUM(costo) as total FROM Paquete WHERE destino=localizacion");
            ResultSet rs1 = ps1.executeQuery();
            if (rs1.next()) {
                costoT = rs1.getFloat("total");
                System.out.println(costoT);
            }
        } catch (SQLException e) {
            System.err.println("Error al jalar costo total " + e);
        }
        try {
            PreparedStatement ps2 = cn.prepareStatement("SELECT SUM(precio) as total FROM Paquete WHERE destino=localizacion");
            ResultSet rs2 = ps2.executeQuery();
            if (rs2.next()) {
                precioT = rs2.getFloat("total");
                System.out.println(precioT);
            }
        } catch (SQLException e) {
            System.err.println("Error al jalar precio total " + e);
        }
        

    }

//Este metodo crea un ArrayList que contiene a todos las rutas que se le pueden asiganar al PC
    public ArrayList<String> arrayRuta() {
        ArrayList<String> list1 = new ArrayList<String>();
        String dato1 = "SELECT nombre_ruta FROM Rutas";
        try {
            PreparedStatement ps2 = cn.prepareStatement(dato1);
            ResultSet rs1 = ps2.executeQuery();
            while (rs1.next()) {
                list1.add(rs1.getString("nombre_ruta"));
            }
        } catch (SQLException e) {
            System.err.println("Error al conectar DB con ruta");
        }
        return list1;
    }

//Este metodo agrega las rutas del metodo anterior al combo de las rutas 
    public void rutas() {
        try {
            arrayRuta();
            ArrayList<String> list1 = new ArrayList<String>();
            list1 = arrayRuta();
            for (int i = 0; i < list1.size(); i++) {
                cmbRuta.addItem(list1.get(i));
            }
        } catch (Exception e) {
        }
    }
}
